syntax = "proto3";

// Scene

message SceneElement
{   
    enum Type {
        NONE = 0;
        MESH = 1;
        VOLUME = 2;
    }
    
    Type    type = 1;
    string  name = 2;
}

message MeshInfo
{
    enum Flags {
        NONE = 0;
        NORMALS = 1;
        // = 2;
        // = 4;
    }

    uint32          flags = 1;
    repeated float  object2world = 2;
    string          properties = 3;
    
    uint32          num_vertices = 4;
    uint32          num_triangles = 5;
}

message VolumeInfo
{
    uint32          flags = 1;
    repeated float  object2world = 2;
    string          properties = 3;
    
}

// Settings

message ImageSettings
{
    uint32  width = 1;
    uint32  height = 2;
    uint32  percentage = 3;
}

message CameraSettings
{
    // camera type

    repeated float position = 1;
    repeated float view_dir = 2;
    repeated float up_dir = 3;
    
    float fov_y = 4;                // Degrees
    
    float dof_focus_distance = 5;
    float dof_aperture = 6;
}

message RenderSettings
{
    uint32          samples = 1;
    repeated float  background_color = 2;   // RGB only atm
}

message Light 
{
    enum Type {
        POINT = 0;
        SUN = 1;
        SPOT = 2;
        AREA = 3;
    }
    
    Type            type = 1;
    repeated float  object2world = 2;
    
    // Common values
    repeated float  color = 3;
    float           intensity = 4;
    bool            visible = 5;
    
    // Per-type values
    repeated float  direction = 6;          // Directional, spot
    float           angular_diameter = 7;   // Directional
    repeated float  position = 8;           // Point/sphere, spot, quad
    float           radius = 9;             // Point/sphere, spot
    float           opening_angle = 10;     // Spot
    float           penumbra_angle = 11;    // Spot
    repeated float  edge1 = 12;             // Area/Quad
    repeated float  edge2 = 13;             // Area/Quad
}   

message LightSettings
{
    float           ambient_intensity = 1;
    repeated float  ambient_color = 2;
    
    repeated Light  lights = 3;
}

// Volume plugins

// Returned by load function in plugin
message VolumeLoadResult
{
    bool            success = 1;
    string          message = 2;
    
    string          hash = 3;
    repeated float  bbox = 4;
}



